<!DOCTYPE html>
<html lang="tr">
<head>
  <meta charset="UTF-8">
  <title>Karakter Analizi & Taklit</title>
  <style>
    body { font-family: Arial, sans-serif; background:#f0f2f5; margin:0; padding:20px; }
    h1 { text-align:center; }
    form { max-width:800px; margin:auto; background:#fff; padding:20px; border-radius:8px; box-shadow:0 0 10px rgba(0,0,0,0.1); }
    .section { margin-bottom:25px; }
    .section h2 { border-bottom:1px solid #ccc; padding-bottom:5px; }
    .question { margin-bottom:15px; }
    label { font-weight:bold; display:block; margin-bottom:5px; }
    textarea { width:100%; height:70px; padding:8px; border-radius:4px; border:1px solid #ccc; resize:vertical; }
    button { display:block; margin:20px auto; padding:10px 20px; font-size:16px; background:#007bff; color:#fff; border:none; border-radius:4px; cursor:pointer; }
    button:hover { background:#0056b3; }
    #result { max-width:800px; margin:30px auto; background:#fff; padding:20px; border-radius:8px; box-shadow:0 0 10px rgba(0,0,0,0.05); }
    .trait { margin-bottom:8px; }
  </style>
</head>
<body>
  <h1>🧠 Karakter Analizi & Taklit</h1>
  <form id="charForm">
    <!-- Sorular burada eklenecek -->
  </form>
  <button id="analyzeBtn">Analizi Bitir & Taklit Et</button>
  <div id="result" style="display:none;">
    <h2>🔍 Karakter Özeti</h2>
    <div id="traits"></div>
    <h2>🗣️ Karakterin Taklit Cevabı</h2>
    <p><strong>Soru:</strong> <span id="simQuestion"></span></p>
    <p><strong>Cevap:</strong> <span id="simAnswer"></span></p>
  </div>

<script>
  // ► Adım 1: Sorular
  const questionSet = {
    duygusal: [
      "Seni en son ne ağlattı?",
      "Bir hayal kırıklığını nasıl atlatırsın?",
      "Başkaları seni yanlış anladığında ne hissedersin?",
      "Duygularını bastırır mısın yoksa açıkça ifade eder misin?",
      "Birine kolay güvenebilir misin?"
    ],
    ahlaki: [
      "Yalan söylemek hangi durumda kabul edilebilir?",
      "Kendin için doğru ama başkası için zararlı bir şey yapar mısın?",
      "Birinin suçu üstlenmeni istese ne yaparsın?",
      "Adalet mi sadakat mi senin için daha önemli?",
      "İnsanlara ikinci şans verilmeli mi?"
    ],
    düşünsel: [
      "İnsan doğası hakkında ne düşünüyorsun?",
      "Gerçeğe ulaşmanın en iyi yolu sence nedir?",
      "Her bilginin sorgulanabilir olması gerektiğine inanır mısın?",
      "Hayatta anlam aramak önemli midir?",
      "Kendi düşüncelerini ne sıklıkla sorgularsın?"
    ],
    sosyal: [
      "Toplumun birey üzerindeki etkisi sence ne kadar güçlü?",
      "Yalnız kalmayı mı kalabalığı mı tercih edersin?",
      "Sosyal medyanın insan ilişkilerine etkisi hakkında ne düşünüyorsun?",
      "Bir toplulukta liderliği üstlenir misin?",
      "Kalabalıklar içinde yalnız hisseder misin?"
    ],
    gündelik: [
      "Bir gününü nasıl planlarsın?",
      "Stresli bir günün ardından nasıl rahatlıyorsun?",
      "Düzenli biri misin yoksa dağınıklık seni rahatsız etmez mi?",
      "Sabah insanı mısın gece kuşu mu?",
      "Zamanını planlamak mı yoksa akışına bırakmak mı?"
    ],
    dil: [
      "İroni yapmayı sever misin? Hangi durumlarda?",
      "Kelimelerin insanlar üzerindeki etkisine inanır mısın?",
      "Kendini ifade ederken hangi tarz sana daha yakın?",
      "Yazılı mı sözlü iletişimde daha etkilisin?",
      "Sessizlik mi yoksa konuşmak mı sana iyi gelir?"
    ]
  };

  // ► Formu dinamik olarak oluştur
  const form = document.getElementById('charForm');
  for (let section in questionSet) {
    const secDiv = document.createElement('div');
    secDiv.classList.add('section');
    secDiv.innerHTML = `<h2>${section.toUpperCase()}</h2>`;
    questionSet[section].forEach(q => {
      const div = document.createElement('div');
      div.classList.add('question');
      div.innerHTML = `<label>${q}</label><textarea name="${q}" required></textarea>`;
      secDiv.appendChild(div);
    });
    form.appendChild(secDiv);
  }

  // ► Adım 2: Basit duygu analizi için kelime listeleri
  const keywords = {
    pozitif: ["mutlu","iyi", "sev", "güzel", "harika", "memnun", "tamam"],
    negatif: ["üzgün","kırgın","sinir", "kötü", "nefret", "acı", "kabus"],
    duygusal: ["hisset", "kalp", "gönül", "ağla", "sevg"],
    mantıksal: ["düşün", "mantık", "akıl", "analiz", "sebep", "sonuç"],
    karmaşık: ["ayrıntı", "derin", "çözüm", "katmanlı", "detaylı"]
  };

  function analyzePolarity(text) {
    let score = 0;
    text.toLowerCase().split(/\W+/).forEach(word => {
      if (keywords.pozitif.includes(word)) score += 1;
      if (keywords.negatif.includes(word)) score -= 1;
    });
    return score;
  }
  function analyzeSubjectivity(text) {
    let p = 0, m = 0;
    text.toLowerCase().split(/\W+/).forEach(word => {
      if (keywords.duygusal.includes(word)) p += 1;
      if (keywords.mantıksal.includes(word)) m += 1;
    });
    if (p + m === 0) return 0.5;
    return p / (p + m);
  }
  function analyzeComplexity(text) {
    return text.split(" ").filter(w => keywords.karmaşık.includes(w.toLowerCase())).length;
  }

  // ► Analiz ve taklit
  document.getElementById('analyzeBtn').onclick = function() {
    let traits = { pozitiflik:0, negatiflik:0, tarafsızlık:0, duygusallık:0, rasyonellik:0, karmaşıklık:0 };
    const inputs = form.querySelectorAll('textarea');
    inputs.forEach(t => {
      const v = t.value;
      const pol = analyzePolarity(v);
      const subj = analyzeSubjectivity(v);
      const comp = analyzeComplexity(v);
      if (pol > 0) traits.pozitiflik += pol;
      else if (pol < 0) traits.negatiflik += -pol;
      else traits.tarafsızlık += 1;
      if (subj > 0.5) traits.duygusallık += subj;
      else traits.rasyonellik += (1-subj);
      traits.karmaşıklık += comp;
    });

    const total = Object.values(traits).reduce((a,b)=>a+b, 0) || 1;
    Object.keys(traits).forEach(k => traits[k] = (traits[k]/total*100).toFixed(2));

    // Taklit et
    const tone = traits.pozitiflik > traits.negatiflik 
      ? "İyimser bir bakış açısıyla değerlendiriyorum." 
      : (traits.negatiflik > traits.pozitiflik 
        ? "Bu konuda temkinliyim." 
        : "Dengeli bir yaklaşım benimsiyorum.");
    const emotion = traits.duygusallık > traits.rasyonellik 
      ? "Duygularım ön planda." 
      : "Mantık ağırlıklı düşünüyorum.";
    const complexity = traits.karmaşıklık > 1 
      ? "Konuya detaylı yaklaşmak isterim." 
      : "Basitçe düşünmeyi tercih ederim.";
    const simAnswer = `${tone} ${emotion} ${complexity}`;

    // Göster
    document.getElementById('traits').innerHTML = Object.entries(traits)
      .map(([k,v]) => `<div class="trait"><strong>${k}:</strong> ${v}%</div>`).join("");
    document.getElementById('simQuestion').innerText = "Hayatta başarıyı neye borçluyuz sence?";
    document.getElementById('simAnswer').innerText = simAnswer;
    document.getElementById('result').style.display = 'block';
  }
</script>
</body>
</html>
